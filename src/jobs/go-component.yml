description: >
  Run ginkgo component tests and optional start rabbit or postgres from a docker-compose.yml
  An example docker-compose file is in jobs/README.md

machine:
  image: ubuntu-2004:202010-01

working_directory: ~/repo

parameters:
  package:
    type: string
    description: "The package to run ginkgo against"
    default: "component"
  skip:
    type: string
    description: "a comma separated list of packages to skip"
    default: ""
  rabbit:
    type: boolean
    description: "start rabbitmq docker container (requires a docker-compose.yml with rabbit configuration)"
    default: false
  postgres:
    type: boolean
    description: "start postgres docker container (requires a docker-compose.yml with postgres configuration)"
    default: false
  postgres_db:
    type: string
    description: "the name of the database to be used for component tests"
    default: component
  go_version:
    type: string
    description: "the version of golang to install"
    default: "1.15.6"

steps:
  - checkout
  - attach_workspace:
      at: ~/repo
  - run:
      name: Check if testing is necessary
      command: <<include(scripts/maybe-skip-testing.sh)>>
  - golang/install:
      version: <<parameters.go_version>>
  - golang/gomod-download
  - run:
      name: Set up docker
      command: |
        echo "$DOCKER_PASS" | docker login --username "$DOCKER_USER" --password-stdin
  - when:
      condition: <<parameters.rabbit>>
      steps:
        - run:
            name: Start Rabbit
            command: <<include(scripts/start-rabbit.sh)>>
  - when:
      condition: <<parameters.postgres>>
      steps:
        - run:
            name: Start Postgres and apply migrations
            environment:
              POSTGRES_DB: <<parameters.postgres_db>>
            command: <<include(scripts/start-postgres.sh)>>
  - ginkgo:
      package: <<parameters.package>>
      skip: <<parameters.skip>>
  - store_test_results:
      path: test-results
