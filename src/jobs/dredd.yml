description: >
  Run dredd tests and optionally start rabbit or postgres from a docker-compose.yml
  An example docker-compose file is in jobs/README.md.
  Requires a dredd.yml and for the app to already be built and in the directory dredd expects.

machine:
  image: ubuntu-2004:202104-01

working_directory: ~/repo

parameters:
  rabbit:
    type: boolean
    description: "start rabbitmq docker container (requires a docker-compose.yml with rabbit configuration)"
    default: false
  postgres:
    type: boolean
    description: "start postgres docker container (requires a docker-compose.yml with postgres configuration)"
    default: false
  debug:
    type: boolean
    description: "whether or not to provide debug outputs"
    default: false
  postgres_db:
    type: string
    description: "the name of the database to be used for component tests"
    default: component
  hooks_path:
    type: string
    description: "the path to hooks/main.go"
  go_version:
    type: string
    description: "the version of golang to install"
    default: "1.15.6"

steps:
  - checkout
  - attach_workspace:
      at: ~/repo
  - golang/install:
      version: <<parameters.go_version>>
  - golang/gomod-download
  - docker-compose:
      rabbit: <<parameters.rabbit>>
      postgres: <<parameters.postgres>>
      debug: <<parameters.debug>>
      postgres_db: <<parameters.postgres_db>>
  - run:
      name: Setup Dredd
      command: |
        # dredd does not understand a gopath with multiple paths
        echo "export GOPATH=$HOME/.go_workspace" >> $BASH_ENV

        go get github.com/snikch/goodman/cmd/goodman
        npm install -g dredd
  - when:
      condition: <<parameters.hooks_path>>
      steps:
        - go-build:
            service_name: hooks
            path: <<parameters.hooks_path>>
  - run:
      name: Run Dredd tests
      command: dredd
